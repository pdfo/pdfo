# .github/workflows/wheels.yml
# GitHub Actions configuration file for building wheels
# See https://github.com/pypa/cibuildwheel for details

name: wheels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # 64-bit Windows
          - os: windows-2019
            python: 37
            platform: win_amd64
          - os: windows-2019
            python: 38
            platform: win_amd64
          - os: windows-2019
            python: 39
            platform: win_amd64
          - os: windows-2019
            python: 310
            platform: win_amd64

          # 64-bit Linux manylinux2010
          - os: ubuntu-20.04
            python: 37
            platform: manylinux_x86_64
            manylinux_image: manylinux2010
          - os: ubuntu-20.04
            python: 38
            platform: manylinux_x86_64
            manylinux_image: manylinux2010
          - os: ubuntu-20.04
            python: 39
            platform: manylinux_x86_64
            manylinux_image: manylinux2010

          # 32-bit Linux manylinux2010
          - os: ubuntu-20.04
            python: 37
            platform: manylinux_i686
            manylinux_image: manylinux2010
          - os: ubuntu-20.04
            python: 38
            platform: manylinux_i686
            manylinux_image: manylinux2010
          - os: ubuntu-20.04
            python: 39
            platform: manylinux_i686
            manylinux_image: manylinux2010

          # 64-bit Linux manylinux2014 x86_64
          - os: ubuntu-20.04
            python: 37
            platform: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-20.04
            python: 38
            platform: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-20.04
            python: 39
            platform: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-20.04
            python: 310
            platform: manylinux_x86_64
            manylinux_image: manylinux2014

          # 64-bit Linux manylinux2014 aarch64
          - os: [self-hosted, Linux, ARM64]
            python: 37
            platform: manylinux_aarch64
            manylinux_image: manylinux2014
          - os: [self-hosted, Linux, ARM64]
            python: 38
            platform: manylinux_aarch64
            manylinux_image: manylinux2014
          - os: [self-hosted, Linux, ARM64]
            python: 39
            platform: manylinux_aarch64
            manylinux_image: manylinux2014
          - os: [self-hosted, Linux, ARM64]
            python: 310
            platform: manylinux_aarch64
            manylinux_image: manylinux2014

          # 64-bit macOS x86_64 and arm64
          - os: macos-10.15
            python: 38
            platform: macosx_*
          - os: macos-10.15
            python: 39
            platform: macosx_*
          - os: macos-10.15
            python: 310
            platform: macosx_*

    steps:
      - name: Provide gfortran on Windows
        if: ${{ runner.os == 'Windows' }}
        uses: msys2/setup-msys2@v2

      - name: Tell distutils to use mingw on Windows
        if: ${{ runner.os == 'Windows' }}
        run: echo "[build]`ncompiler=mingw32" | Out-File -Encoding ASCII ~/pydistutils.cfg

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Python
        if: ${{ matrix.platform != 'manylinux_aarch64' }}
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Build wheels on manylinux_aarch64
        if: ${{ matrix.platform == 'manylinux_aarch64' }}
        uses: pypa/cibuildwheel@2.5.0
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform }}
          CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_ENVIRONMENT: PIP_DEFAULT_TIMEOUT=21600 PIP_EXTRA_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple

      - name: Build wheels on other platforms
        if: ${{ matrix.platform != 'manylinux_aarch64' }}
        uses: pypa/cibuildwheel@2.5.0
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  # Build the source distribution
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Build source distribution
        run: bash build_tools/github/build_source.sh

      - name: Test source distribution
        run: bash build_tools/github/test_source.sh

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  # Upload the distributions to Anaconda
  upload_anaconda:
    name: Upload to Anaconda
    runs-on: ubuntu-20.04
    if: ${{ github.event_name != 'pull_request' }}
    needs: [build_wheels, build_sdist]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Upload artifacts to Anaconda
        run: bash build_tools/github/upload_anaconda.sh
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}